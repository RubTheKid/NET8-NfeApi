services:
  postgres:
    image: postgres:15
    container_name: nfe-postgres
    environment:
      POSTGRES_DB: nfe_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nfe-network

  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    container_name: nfe-jenkins
    user: root
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JENKINS_OPTS=--httpPort=8080
    networks:
      - nfe-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: nfe-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "5672:5672"  
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - nfe-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5


  api:
    build:
      context: .
      dockerfile: Nfe.Api/Dockerfile
    container_name: nfe-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=nfe_db;Username=postgres;Password=postgres;Port=5432
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__Username=rabbitmq
      - RabbitMQ__Password=rabbitmq
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - nfe-network


volumes:
  postgres_data:
  rabbitmq_data:
  jenkins_data:

networks:
  nfe-network:
    driver: bridge